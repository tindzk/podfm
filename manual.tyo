.meta {
	.title{podfm}
}

.chapter[Introduction] {
	podfm is an extensible podcatcher for the console. It
	provides the possibility to write provider-specific plugins.
	This is especially useful when providers offer additional
	content such as transcriptions which general-purpose
	podcatchers usually ignore.
}

.chapter[Requirements] {
	.list {
		.item{.url[../Jivai]{Jivai}}
		.item{.url[../Jivai-Utils]{Jivai-Utils}}
	}
}

.chapter[Installation] {
	First make sure that the aforementioned requirements are met.
	Then checkout and compile the code using:

	.command {
		$ git clone git://github.com/tindzk/podfm.git
		$ cd podfm; ./build.sh
	}
}

.chapter[Getting Started] {
	.p {
		podfm can download files locally to disk or to an external
		device like a media player. Therefore, podfm maintains a cache
		file keeping track of already downloaded podcasts.
	}

	.p {
		By default, the configuration path points to the current
		directory. However, this can be configured in
		.path{config.h}. But you can also pass a different path via
		parameter.
	}

	.p {
		The configuration path must contain a file called
		.path{subscriptions.yml} with the following layout:
	}

	.code {
		providerId1:
			first subscription
			second subscription

		providerId2:
			...
	}

	.section[RFI plugin] {
		As for RFI, the file may look like:

		.code {
			rfi:
				Podcast_DANSE
				Podcast_SAV
				Podcast_VEN
				journalFrancaisFacile
				rss_apprendre_francais
		}

		This layout stores the selected podcasts in one directory,
		.path{rfi}. If this isn't desired, you may also break them
		up into multiple sections:

		.code {
			rfi: RFI Group 1
				Podcast_DANSE
				Podcast_SAV

			rfi: RFI Group 2
				Podcast_VEN
		}

		.warning {
			If you don't label each section differently, the separation
			won't have any effect.
		}
	}

	.section[RSS plugin] {
		The RSS plugin needs to be used like this:

		.code {
			rss: ecoute
				url: http://www.ecoute.de/podcast/rss.xml

			rss: tagesschau
				url: http://www.tagesschau.de/export/podcast/tagesthemen/
				url: http://www.tagesschau.de/export/podcast/tagesschau/
		}

		.warning {
			.keyword{url} is necessary because the configuration parser
			will strip .keyword{http} from the URL when nothing else is
			prepended.
		}
	}

	.section[Limiting downloads] {
		Some news podcasts have a repertoire which goes back for
		several weeks. If you only want to hear the latest episode
		or e.g. the last five episodes, you can put the option
		.keyword{limit: n} into the podcast group. This will
		download the first .number{n} episodes and skip the rest.
		The default value is .number{-1} which means there's no
		limit.

		.code {
			rss: tagesschau
				limit: 5
				url: http://www.tagesschau.de/export/podcast/tagesthemen/
		}
	}

	.section[Date duplication in file name] {
		The titles may already contain the date. If this is the
		case, the downloaded file name will contain the date twice.
		This can be prevented by using the option .keyword{date: no}.
	}

	.section[Synchronize] {
		To synchronize, just run:

		.command {
			$ ./podfm.bin /mnt/ipod
		}

		Consequently, the cache file as well as the podcasts will be
		stored in the given path.
	}
}

.chapter[Providers] {
	Currently these providers are supported:

	.list {
		.item{.url[http://www.rfi.fr/]{RFI} (.keyword{rfi})}
		.item{RSS (.keyword{rss})}
	}

	The RSS plugin only exists to cover those providers which aren't
	supported by any specific plugin.
}

.chapter[License] {
	.p {
		Licensed under the EUPL, Version 1.1 only (the
		.i{"Licence"}); You may not use this work except in
		compliance with the Licence.
	}

	.p {
		You may obtain a copy of the Licence at:

		.url[http://ec.europa.eu/idabc/eupl] {
			http://ec.europa.eu/idabc/eupl
		}
	}

	.p {
		Unless required by applicable law or agreed to in writing,
		software distributed under the Licence is distributed on an
		"AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
		either express or implied.
	}

	.p {
		See the Licence for the specific language governing
		permissions and limitations under the Licence.
	}
}

.chapter[See also] {
	.list {
		.item{.url[http://github.com/tindzk/podfm]{Browse source}}
		.item{.url[http://github.com/tindzk]{GitHub account}}
	}
}

.chapter[Donate] {
	.url[http://flattr.com/thing/69450/podfm-extensible-podcast-aggregator] {
		.image {
			http://api.flattr.com/button/button-compact-static-100x17.png
		}
	}
}

.chapter[Contact] {
	.mail[tim.nieradzik@gmx.de]{Tim Nieradzik}
}
